CREATE TABLE chair_permissions
(
    id            INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id       INTEGER,
    chair_id      INTEGER,
    permission_id INTEGER,
    CONSTRAINT pk_chair_permissions PRIMARY KEY (id)
);

CREATE TABLE chairs
(
    id                     INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    english_name           VARCHAR(255),
    english_abbreviation   VARCHAR(255),
    ukrainian_name         VARCHAR(255),
    ukrainian_abbreviation VARCHAR(255),
    faculty_id             INTEGER,
    CONSTRAINT pk_chairs PRIMARY KEY (id)
);

CREATE TABLE extraction_profiles
(
    id            INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    is_finished   BOOLEAN,
    extraction_id INTEGER,
    profile_id    INTEGER,
    CONSTRAINT pk_extraction_profiles PRIMARY KEY (id)
);

CREATE TABLE extractions
(
    id                      INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    date_started            date,
    is_finished             BOOLEAN,
    scientometric_system_id INTEGER,
    CONSTRAINT pk_extractions PRIMARY KEY (id)
);

CREATE TABLE faculties
(
    id                     INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    english_name           VARCHAR(255),
    english_abbreviation   VARCHAR(255),
    ukrainian_name         VARCHAR(255),
    ukrainian_abbreviation VARCHAR(255),
    CONSTRAINT pk_faculties PRIMARY KEY (id)
);

CREATE TABLE faculty_permissions
(
    id            INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id       INTEGER,
    faculty_id    INTEGER,
    permission_id INTEGER,
    CONSTRAINT pk_faculty_permissions PRIMARY KEY (id)
);

CREATE TABLE fields
(
    id                      INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name                    VARCHAR(255),
    rule                    VARCHAR(255),
    type                    VARCHAR(255),
    scientometric_system_id INTEGER,
    CONSTRAINT pk_fields PRIMARY KEY (id)
);

CREATE TABLE labels
(
    id             INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    original_name  VARCHAR(255),
    displayed_name VARCHAR(255),
    CONSTRAINT pk_labels PRIMARY KEY (id)
);

CREATE TABLE permissions
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255),
    CONSTRAINT pk_permissions PRIMARY KEY (id)
);

CREATE TABLE profile_field_values
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    value      VARCHAR(255),
    profile_id INTEGER,
    field_id   INTEGER,
    CONSTRAINT pk_profile_field_values PRIMARY KEY (id)
);

CREATE TABLE profile_labels
(
    label_id   INTEGER NOT NULL,
    profile_id INTEGER NOT NULL,
    CONSTRAINT pk_profile_labels PRIMARY KEY (label_id, profile_id)
);

CREATE TABLE profiles
(
    id                      INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    are_works_doubtful      BOOLEAN,
    is_deactivated          BOOLEAN,
    profile_user_id         VARCHAR(255),
    scientometric_system_id INTEGER,
    scientist_id            INTEGER,
    CONSTRAINT pk_profiles PRIMARY KEY (id)
);

CREATE TABLE roles
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255),
    CONSTRAINT pk_roles PRIMARY KEY (id)
);

CREATE TABLE scientists
(
    id        INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    full_name VARCHAR(255),
    position  VARCHAR(255),
    user_id   INTEGER,
    chair_id  INTEGER,
    CONSTRAINT pk_scientists PRIMARY KEY (id)
);

CREATE TABLE scientometric_systems
(
    id                         INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name                       VARCHAR(255),
    next_min_import_date       date,
    profile_import_periodicity INTEGER,
    CONSTRAINT pk_scientometric_systems PRIMARY KEY (id)
);

CREATE TABLE user_permissions
(
    id            INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id       INTEGER,
    permission_id INTEGER,
    CONSTRAINT pk_user_permissions PRIMARY KEY (id)
);

CREATE TABLE user_roles
(
    role_id INTEGER NOT NULL,
    user_id INTEGER NOT NULL,
    CONSTRAINT pk_user_roles PRIMARY KEY (role_id, user_id)
);

CREATE TABLE users
(
    id                 INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    username           VARCHAR(255),
    password           VARCHAR(255),
    email              VARCHAR(255),
    verification_token VARCHAR(255),
    is_verified        BOOLEAN,
    CONSTRAINT pk_users PRIMARY KEY (id)
);

ALTER TABLE chairs
    ADD CONSTRAINT FK_CHAIRS_ON_FACULTY FOREIGN KEY (faculty_id) REFERENCES faculties (id);

ALTER TABLE chair_permissions
    ADD CONSTRAINT FK_CHAIR_PERMISSIONS_ON_CHAIR FOREIGN KEY (chair_id) REFERENCES chairs (id);

ALTER TABLE chair_permissions
    ADD CONSTRAINT FK_CHAIR_PERMISSIONS_ON_PERMISSION FOREIGN KEY (permission_id) REFERENCES permissions (id);

ALTER TABLE chair_permissions
    ADD CONSTRAINT FK_CHAIR_PERMISSIONS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE extractions
    ADD CONSTRAINT FK_EXTRACTIONS_ON_SCIENTOMETRIC_SYSTEM FOREIGN KEY (scientometric_system_id) REFERENCES scientometric_systems (id);

ALTER TABLE extraction_profiles
    ADD CONSTRAINT FK_EXTRACTION_PROFILES_ON_EXTRACTION FOREIGN KEY (extraction_id) REFERENCES extractions (id);

ALTER TABLE extraction_profiles
    ADD CONSTRAINT FK_EXTRACTION_PROFILES_ON_PROFILE FOREIGN KEY (profile_id) REFERENCES profiles (id);

ALTER TABLE faculty_permissions
    ADD CONSTRAINT FK_FACULTY_PERMISSIONS_ON_FACULTY FOREIGN KEY (faculty_id) REFERENCES faculties (id);

ALTER TABLE faculty_permissions
    ADD CONSTRAINT FK_FACULTY_PERMISSIONS_ON_PERMISSION FOREIGN KEY (permission_id) REFERENCES permissions (id);

ALTER TABLE faculty_permissions
    ADD CONSTRAINT FK_FACULTY_PERMISSIONS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE fields
    ADD CONSTRAINT FK_FIELDS_ON_SCIENTOMETRIC_SYSTEM FOREIGN KEY (scientometric_system_id) REFERENCES scientometric_systems (id);

ALTER TABLE profiles
    ADD CONSTRAINT FK_PROFILES_ON_SCIENTIST FOREIGN KEY (scientist_id) REFERENCES scientists (id);

ALTER TABLE profiles
    ADD CONSTRAINT FK_PROFILES_ON_SCIENTOMETRIC_SYSTEM FOREIGN KEY (scientometric_system_id) REFERENCES scientometric_systems (id);

ALTER TABLE profile_field_values
    ADD CONSTRAINT FK_PROFILE_FIELD_VALUES_ON_FIELD FOREIGN KEY (field_id) REFERENCES fields (id);

ALTER TABLE profile_field_values
    ADD CONSTRAINT FK_PROFILE_FIELD_VALUES_ON_PROFILE FOREIGN KEY (profile_id) REFERENCES profiles (id);

ALTER TABLE scientists
    ADD CONSTRAINT FK_SCIENTISTS_ON_CHAIR FOREIGN KEY (chair_id) REFERENCES chairs (id);

ALTER TABLE scientists
    ADD CONSTRAINT FK_SCIENTISTS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE user_permissions
    ADD CONSTRAINT FK_USER_PERMISSIONS_ON_PERMISSION FOREIGN KEY (permission_id) REFERENCES permissions (id);

ALTER TABLE user_permissions
    ADD CONSTRAINT FK_USER_PERMISSIONS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE profile_labels
    ADD CONSTRAINT fk_prolab_on_label FOREIGN KEY (label_id) REFERENCES labels (id);

ALTER TABLE profile_labels
    ADD CONSTRAINT fk_prolab_on_profile FOREIGN KEY (profile_id) REFERENCES profiles (id);

ALTER TABLE user_roles
    ADD CONSTRAINT fk_userol_on_role FOREIGN KEY (role_id) REFERENCES roles (id);

ALTER TABLE user_roles
    ADD CONSTRAINT fk_userol_on_user FOREIGN KEY (user_id) REFERENCES users (id);
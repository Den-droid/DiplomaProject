CREATE TABLE chairs
(
    id                     INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    english_name           VARCHAR(255),
    english_abbreviation   VARCHAR(255),
    ukrainian_name         VARCHAR(255),
    ukrainian_abbreviation VARCHAR(255),
    faculty_id             INTEGER,
    CONSTRAINT pk_chairs PRIMARY KEY (id)
);

CREATE TABLE extraction_profiles
(
    id             INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    is_finished    BOOLEAN,
    error_occurred BOOLEAN,
    extraction_id  INTEGER,
    profile_id     INTEGER,
    CONSTRAINT pk_extraction_profiles PRIMARY KEY (id)
);

CREATE TABLE extractions
(
    id                      INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    date_started            date,
    is_finished             BOOLEAN,
    scientometric_system_id INTEGER,
    CONSTRAINT pk_extractions PRIMARY KEY (id)
);

CREATE TABLE faculties
(
    id                     INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    english_name           VARCHAR(255),
    english_abbreviation   VARCHAR(255),
    ukrainian_name         VARCHAR(255),
    ukrainian_abbreviation VARCHAR(255),
    CONSTRAINT pk_faculties PRIMARY KEY (id)
);

CREATE TABLE field_extraction_info
(
    id                      INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    key                     VARCHAR(255),
    rule                    VARCHAR(255),
    scientometric_system_id INTEGER,
    field_id                INTEGER,
    rule_type_id            INTEGER,
    CONSTRAINT pk_field_extraction_info PRIMARY KEY (id)
);

CREATE TABLE field_recommendations
(
    id                      INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    key                     VARCHAR(255),
    text                    VARCHAR(500),
    scientometric_system_id INTEGER,
    field_id                INTEGER,
    recommendation_type_id  INTEGER,
    CONSTRAINT pk_field_recommendations PRIMARY KEY (id)
);

CREATE TABLE field_rule_types
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255),
    CONSTRAINT pk_field_rule_types PRIMARY KEY (id)
);

CREATE TABLE field_types
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255),
    CONSTRAINT pk_field_types PRIMARY KEY (id)
);

CREATE TABLE fields
(
    id      INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name    VARCHAR(255),
    type_id INTEGER,
    CONSTRAINT pk_fields PRIMARY KEY (id)
);

CREATE TABLE labels
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255),
    CONSTRAINT pk_labels PRIMARY KEY (id)
);

CREATE TABLE permissions
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255),
    CONSTRAINT pk_permissions PRIMARY KEY (id)
);

CREATE TABLE profile_field_recommendations
(
    id                     INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    is_condition_fulfilled BOOLEAN                                  NOT NULL,
    profile_id             INTEGER,
    field_id               INTEGER,
    CONSTRAINT pk_profile_field_recommendations PRIMARY KEY (id)
);

CREATE TABLE profile_field_values
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    value      VARCHAR(255),
    profile_id INTEGER,
    field_id   INTEGER,
    CONSTRAINT pk_profile_field_values PRIMARY KEY (id)
);

CREATE TABLE profile_labels
(
    label_id   INTEGER NOT NULL,
    profile_id INTEGER NOT NULL,
    CONSTRAINT pk_profile_labels PRIMARY KEY (label_id, profile_id)
);

CREATE TABLE profiles
(
    id                      INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    are_works_doubtful      BOOLEAN,
    is_active               BOOLEAN,
    profile_user_id         VARCHAR(255),
    scientometric_system_id INTEGER,
    scientist_id            INTEGER,
    CONSTRAINT pk_profiles PRIMARY KEY (id)
);

CREATE TABLE recommendation_types
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255),
    CONSTRAINT pk_recommendation_types PRIMARY KEY (id)
);

CREATE TABLE role_default_permissions
(
    permission_id INTEGER NOT NULL,
    role_id       INTEGER NOT NULL,
    CONSTRAINT pk_role_default_permissions PRIMARY KEY (permission_id, role_id)
);

CREATE TABLE role_possible_permissions
(
    permission_id INTEGER NOT NULL,
    role_id       INTEGER NOT NULL,
    CONSTRAINT pk_role_possible_permissions PRIMARY KEY (permission_id, role_id)
);

CREATE TABLE roles
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255),
    CONSTRAINT pk_roles PRIMARY KEY (id)
);

CREATE TABLE scientists
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    full_name  VARCHAR(255),
    position   VARCHAR(255),
    user_id    INTEGER,
    chair_id   INTEGER,
    faculty_id INTEGER,
    CONSTRAINT pk_scientists PRIMARY KEY (id)
);

CREATE TABLE scientometric_systems
(
    id                   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name                 VARCHAR(255),
    next_min_import_date date,
    CONSTRAINT pk_scientometric_systems PRIMARY KEY (id)
);

CREATE TABLE user_chairs
(
    chair_id INTEGER NOT NULL,
    user_id  INTEGER NOT NULL,
    CONSTRAINT pk_user_chairs PRIMARY KEY (chair_id, user_id)
);

CREATE TABLE user_faculties
(
    faculty_id INTEGER NOT NULL,
    user_id    INTEGER NOT NULL,
    CONSTRAINT pk_user_faculties PRIMARY KEY (faculty_id, user_id)
);

CREATE TABLE user_roles
(
    role_id INTEGER NOT NULL,
    user_id INTEGER NOT NULL
);

CREATE TABLE users
(
    id                    INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    username              VARCHAR(255),
    password              VARCHAR(255),
    email                 VARCHAR(255),
    full_name             VARCHAR(255),
    forgot_password_token VARCHAR(255),
    invite_code           VARCHAR(255),
    is_approved           BOOLEAN,
    is_active             BOOLEAN,
    is_signed_up          BOOLEAN,
    refresh_token         VARCHAR(255),
    CONSTRAINT pk_users PRIMARY KEY (id)
);

CREATE TABLE user_permissions
(
    permission_id INTEGER NOT NULL,
    user_id       INTEGER NOT NULL,
    CONSTRAINT pk_user_permissions PRIMARY KEY (permission_id, user_id)
);

ALTER TABLE chairs
    ADD CONSTRAINT FK_CHAIRS_ON_FACULTY FOREIGN KEY (faculty_id) REFERENCES faculties (id);

ALTER TABLE extractions
    ADD CONSTRAINT FK_EXTRACTIONS_ON_SCIENTOMETRIC_SYSTEM FOREIGN KEY (scientometric_system_id) REFERENCES scientometric_systems (id);

ALTER TABLE extraction_profiles
    ADD CONSTRAINT FK_EXTRACTION_PROFILES_ON_EXTRACTION FOREIGN KEY (extraction_id) REFERENCES extractions (id);

ALTER TABLE extraction_profiles
    ADD CONSTRAINT FK_EXTRACTION_PROFILES_ON_PROFILE FOREIGN KEY (profile_id) REFERENCES profiles (id);

ALTER TABLE fields
    ADD CONSTRAINT FK_FIELDS_ON_TYPE FOREIGN KEY (type_id) REFERENCES field_types (id);

ALTER TABLE field_extraction_info
    ADD CONSTRAINT FK_FIELD_EXTRACTION_INFO_ON_FIELD FOREIGN KEY (field_id) REFERENCES fields (id);

ALTER TABLE field_extraction_info
    ADD CONSTRAINT FK_FIELD_EXTRACTION_INFO_ON_RULE_TYPE FOREIGN KEY (rule_type_id) REFERENCES field_rule_types (id);

ALTER TABLE field_extraction_info
    ADD CONSTRAINT FK_FIELD_EXTRACTION_INFO_ON_SCIENTOMETRIC_SYSTEM FOREIGN KEY (scientometric_system_id) REFERENCES scientometric_systems (id);

ALTER TABLE field_recommendations
    ADD CONSTRAINT FK_FIELD_RECOMMENDATIONS_ON_FIELD FOREIGN KEY (field_id) REFERENCES fields (id);

ALTER TABLE field_recommendations
    ADD CONSTRAINT FK_FIELD_RECOMMENDATIONS_ON_RECOMMENDATION_TYPE FOREIGN KEY (recommendation_type_id) REFERENCES recommendation_types (id);

ALTER TABLE field_recommendations
    ADD CONSTRAINT FK_FIELD_RECOMMENDATIONS_ON_SCIENTOMETRIC_SYSTEM FOREIGN KEY (scientometric_system_id) REFERENCES scientometric_systems (id);

ALTER TABLE profiles
    ADD CONSTRAINT FK_PROFILES_ON_SCIENTIST FOREIGN KEY (scientist_id) REFERENCES scientists (id);

ALTER TABLE profiles
    ADD CONSTRAINT FK_PROFILES_ON_SCIENTOMETRIC_SYSTEM FOREIGN KEY (scientometric_system_id) REFERENCES scientometric_systems (id);

ALTER TABLE profile_field_recommendations
    ADD CONSTRAINT FK_PROFILE_FIELD_RECOMMENDATIONS_ON_FIELD FOREIGN KEY (field_id) REFERENCES fields (id);

ALTER TABLE profile_field_recommendations
    ADD CONSTRAINT FK_PROFILE_FIELD_RECOMMENDATIONS_ON_PROFILE FOREIGN KEY (profile_id) REFERENCES profiles (id);

ALTER TABLE profile_field_values
    ADD CONSTRAINT FK_PROFILE_FIELD_VALUES_ON_FIELD FOREIGN KEY (field_id) REFERENCES fields (id);

ALTER TABLE profile_field_values
    ADD CONSTRAINT FK_PROFILE_FIELD_VALUES_ON_PROFILE FOREIGN KEY (profile_id) REFERENCES profiles (id);

ALTER TABLE scientists
    ADD CONSTRAINT FK_SCIENTISTS_ON_CHAIR FOREIGN KEY (chair_id) REFERENCES chairs (id);

ALTER TABLE scientists
    ADD CONSTRAINT FK_SCIENTISTS_ON_FACULTY FOREIGN KEY (faculty_id) REFERENCES faculties (id);

ALTER TABLE scientists
    ADD CONSTRAINT FK_SCIENTISTS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE profile_labels
    ADD CONSTRAINT fk_prolab_on_label FOREIGN KEY (label_id) REFERENCES labels (id);

ALTER TABLE profile_labels
    ADD CONSTRAINT fk_prolab_on_profile FOREIGN KEY (profile_id) REFERENCES profiles (id);

ALTER TABLE role_default_permissions
    ADD CONSTRAINT fk_roldefper_on_permission FOREIGN KEY (permission_id) REFERENCES permissions (id);

ALTER TABLE role_default_permissions
    ADD CONSTRAINT fk_roldefper_on_role FOREIGN KEY (role_id) REFERENCES roles (id);

ALTER TABLE role_possible_permissions
    ADD CONSTRAINT fk_rolposper_on_permission FOREIGN KEY (permission_id) REFERENCES permissions (id);

ALTER TABLE role_possible_permissions
    ADD CONSTRAINT fk_rolposper_on_role FOREIGN KEY (role_id) REFERENCES roles (id);

ALTER TABLE user_chairs
    ADD CONSTRAINT fk_usecha_on_chair FOREIGN KEY (chair_id) REFERENCES chairs (id);

ALTER TABLE user_chairs
    ADD CONSTRAINT fk_usecha_on_user FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE user_faculties
    ADD CONSTRAINT fk_usefac_on_faculty FOREIGN KEY (faculty_id) REFERENCES faculties (id);

ALTER TABLE user_faculties
    ADD CONSTRAINT fk_usefac_on_user FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE user_permissions
    ADD CONSTRAINT fk_useper_on_permission FOREIGN KEY (permission_id) REFERENCES permissions (id);

ALTER TABLE user_permissions
    ADD CONSTRAINT fk_useper_on_user FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE user_roles
    ADD CONSTRAINT fk_userol_on_role FOREIGN KEY (role_id) REFERENCES roles (id);

ALTER TABLE user_roles
    ADD CONSTRAINT fk_userol_on_user FOREIGN KEY (user_id) REFERENCES users (id);